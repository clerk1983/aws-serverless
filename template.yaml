AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: >
  SAM Template for a web application with S3, API Gateway, Lambda, and DynamoDB.

Resources:
  # S3 Bucket for hosting the static website
  FrontEndBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub "${AWS::StackName}-frontend-s3-${AWS::Region}-${AWS::AccountId}"
      WebsiteConfiguration:
        IndexDocument: index.html
        ErrorDocument: error.html
      OwnershipControls:
        Rules:
          - ObjectOwnership: BucketOwnerPreferred
      PublicAccessBlockConfiguration:
        BlockPublicAcls: false
        IgnorePublicAcls: false
        BlockPublicPolicy: false
        RestrictPublicBuckets: false
    DeletionPolicy: Retain
    UpdateReplacePolicy: Retain

  # BucketPolicy for the S3 bucket to allow public access
  FrontEndBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref FrontEndBucket
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Sid: PublicReadGetObject
            Effect: Allow
            Principal: "*"
            Action: "s3:GetObject"
            Resource: !Sub "arn:aws:s3:::${FrontEndBucket}/*"

  # Lambda function for handling API requests
  BackendFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: app.handler
      Runtime: nodejs20.x
      CodeUri: ./backend/src/
      Role: !GetAtt BackendFunctionExecutionRole.Arn
      Environment:
        Variables:
          TABLE_NAME: !Ref DynamoDBTable
      Events:
        Api:
          Type: Api
          Properties:
            RestApiId: !Ref BackendFunctionApi
            Path: /{id}
            Method: ANY

  BackendFunctionApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: Prod
      Cors:
        AllowMethods: "'GET,POST,OPTIONS'"
        AllowHeaders: "'Content-Type'"
        AllowOrigin: "'*'"

  BackendFunctionExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: DynamoDBAccess
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - dynamodb:GetItem
                Resource:
                  - !Sub "arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/serverless-tasks"

  # DynamoDB table for storing data
  DynamoDBTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: serverless-tasks
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
      KeySchema:
        - AttributeName: id
          KeyType: HASH
      BillingMode: PAY_PER_REQUEST
    DeletionPolicy: Retain
    UpdateReplacePolicy: Retain

Outputs:
  WebsiteURL:
    Value: !Sub "http://${FrontEndBucket}.s3-website-${AWS::Region}.amazonaws.com/"
    Description: URL for the static website
  ApiEndpoint:
    Value: !Sub "https://${BackendFunctionApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/"
    Description: API Gateway endpoint URL
