openapi: 3.0.1
info:
  title: reverse-aws-serverless
  version: "1.0"
  description: An example of a serverless application
servers:
  - url: https://8bgmut0ajj.execute-api.ap-northeast-1.amazonaws.com/{basePath}
    variables:
      basePath:
        default: Prod
paths:
  /games/{gameId}:
    parameters:
      - name: gameId
        in: path
        required: true
        schema:
          type: string
          format: uuid
          example: 12345678-1234-5678-1234-567812345678
          description: Game_ID
    post:
      description: 新規ゲーム開始
      responses:
        201:
          description: Created

    get:
      description: ゲームの情報を取得する
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  games:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1
                        winnerDist:
                          type: integer
                          example: 1
                        startedAt:
                          type: string
                          format: date-time
                          example: 2020-01-01T00:00:00Z

  /games/{gameId}/turns/{turnCount}:
    parameters:
      - name: gameId
        in: path
        required: true
        schema:
          type: string
          format: uuid
          example: 12345678-1234-5678-1234-567812345678
          description: Game_ID
      - name: turnCount
        in: path
        required: true
        schema:
          type: integer
          format: int32
    get:
      description: 特定のターンの盤情報を取得する
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                type: object
                properties:
                  turnCount:
                    type: integer
                    format: int32
                    example: 1
                  board:
                    type: array
                    example:
                      [
                        [0, 0, 0, 0, 0, 0, 0, 0],
                        [0, 0, 0, 0, 0, 0, 0, 0],
                        [0, 0, 0, 0, 0, 0, 0, 0],
                        [0, 0, 0, 0, 0, 0, 0, 0],
                        [0, 0, 0, 0, 0, 0, 0, 0],
                        [0, 0, 0, 0, 0, 0, 0, 0],
                        [0, 0, 0, 0, 0, 0, 0, 0],
                        [0, 0, 0, 0, 0, 0, 0, 0],
                      ]
                  nextDisc:
                    type: integer
                    format: int32
                    example: 1

  /games/{gameId}/turns:
    parameters:
      - name: gameId
        in: path
        required: true
        schema:
          type: string
          format: uuid
          example: 12345678-1234-5678-1234-567812345678
          description: Game_ID
    post:
      description: 石を置く
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                turnCount:
                  type: integer
                  format: int32
                  example: 1
                move:
                  type: object
                  properties:
                    disc:
                      type: integer
                      format: int32
                      example: 1
                    x:
                      type: integer
                      format: int32
                      example: 1
                    y:
                      type: integer
                      format: int32
                      example: 1
      responses:
        "201":
          description: Created
        "400":
          description: Invalid request

components:
  schemas:
    Empty: {}
